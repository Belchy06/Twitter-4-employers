{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Profile\\\\SearchProfile.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions';\nimport Post from '../Posts/Post';\nimport LoadingPosts from '../Posts/LoadingPosts';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nconst styles = {};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFollow = this.handleFollow.bind(this);\n    this.handleUnfollow = this.handleUnfollow.bind(this);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.auth.isAuthenticated) {\n      if (oldProps.user && oldProps.user.following !== this.props.user.following) {\n        console.log('Need to update!');\n      }\n    }\n  }\n\n  handleFollow() {\n    this.props.followUser(this.props.profile._id);\n  }\n\n  handleUnfollow() {\n    this.props.unfollowUser(this.props.profile._id);\n  }\n\n  render() {\n    //console.log(this.props)\n    const classes = this.props;\n    let followBtn;\n\n    if (this.props.user.isAuthenticated) {\n      if (this.props.user.following.indexOf(this.props.profile._id) === -1) {\n        followBtn = React.createElement(\"span\", {\n          className: classes.btnBlock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outlined\",\n          type: \"\",\n          className: classes.btnFollow,\n          onClick: this.handleFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Follow\"));\n      } else {\n        followBtn = React.createElement(\"span\", {\n          className: classes.btnBlock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outlined\",\n          type: \"\",\n          className: classes.btnFollow,\n          onClick: this.handleUnfollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Unfollow\"));\n      }\n    }\n\n    let profileInfo;\n\n    if (this.props.profile) {\n      profileInfo = React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.props.profile.handle), followBtn);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, profileInfo);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  followUser,\n  unfollowUser,\n  refreshUserProfile\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Profile/SearchProfile.js"],"names":["React","Component","withStyles","connect","getPostsByUserId","getUserProfile","followUser","unfollowUser","refreshUserProfile","Post","LoadingPosts","Paper","Button","styles","Profile","constructor","props","handleFollow","bind","handleUnfollow","componentDidUpdate","oldProps","auth","isAuthenticated","user","following","console","log","profile","_id","render","classes","followBtn","indexOf","btnBlock","btnFollow","profileInfo","handle","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions'\r\nimport Post from '../Posts/Post'\r\nimport LoadingPosts from '../Posts/LoadingPosts'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst styles = {\r\n}\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleFollow = this.handleFollow.bind(this)\r\n    this.handleUnfollow = this.handleUnfollow.bind(this)\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if(this.props.auth.isAuthenticated) {\r\n      if(oldProps.user && oldProps.user.following !== this.props.user.following) {\r\n        console.log('Need to update!')\r\n      }\r\n    } \r\n  }\r\n\r\n  handleFollow () {\r\n    this.props.followUser(this.props.profile._id)\r\n  }\r\n\r\n  handleUnfollow () {\r\n    this.props.unfollowUser(this.props.profile._id)\r\n  }\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    const classes = this.props\r\n    let followBtn\r\n    if(this.props.user.isAuthenticated) {\r\n      if(this.props.user.following.indexOf(this.props.profile._id) === -1) {\r\n        followBtn = (\r\n          <span className = { classes.btnBlock }>\r\n            <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow } onClick = { this.handleFollow }>\r\n              Follow\r\n            </Button>\r\n          </span>\r\n        )\r\n      } else {\r\n        followBtn = (\r\n          <span className = { classes.btnBlock }>\r\n            <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow } onClick = { this.handleUnfollow }>\r\n              Unfollow\r\n            </Button>\r\n          </span>\r\n        )\r\n      }\r\n    } \r\n\r\n\r\n    let profileInfo\r\n    if(this.props.profile) {\r\n      profileInfo = (\r\n        <Paper>\r\n          <div>{ this.props.profile.handle }</div>\r\n          { followBtn }\r\n        </Paper>\r\n        \r\n      )\r\n    }\r\n    return (\r\n      <div>{ profileInfo }</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {  followUser, unfollowUser, refreshUserProfile })(withStyles(styles)(Profile))"]},"metadata":{},"sourceType":"module"}