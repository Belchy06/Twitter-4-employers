{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Profile\\\\SearchProfile.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nconst styles = {\n  handle: {\n    color: '#888',\n    display: 'inline-block',\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  following: {},\n  followers: {},\n  display: {\n    marginTop: 5,\n    marginBottom: 5,\n    color: \"#333\",\n    '&:hover': {\n      textDecoration: 'underline #333'\n    }\n  },\n  paper: {\n    padding: 8,\n    marginBottom: 10\n  },\n  detail: {\n    marginRight: 5\n  },\n  btnBlock: {\n    float: 'right'\n  },\n  btnFollow: {\n    backgroundColor: 'inherit',\n    color: '#78dd60',\n    '&:hover': {\n      color: '#fff',\n      borderColor: '#78dd60',\n      backgroundColor: '#78dd60'\n    }\n  }\n};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFollow = this.handleFollow.bind(this);\n    this.handleUnfollow = this.handleUnfollow.bind(this);\n  }\n\n  componentDidMount() {\n    getUserProfile(this.props.targetUser);\n    getPostsByUserId(this.props.targetUser);\n  }\n\n  componentWillMount() {\n    getUserProfile(this.props.targetUser);\n    getPostsByUserId(this.props.targetUser);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.auth.isAuthenticated) {\n      if (oldProps.user && oldProps.user.following !== this.props.user.following) {\n        this.props.user.following.map((id, i) => {\n          this.props.getUserProfile(id);\n        });\n      }\n    }\n  }\n\n  handleFollow() {\n    this.props.followUser(this.props.profile._id);\n  }\n\n  handleUnfollow() {\n    this.props.unfollowUser(this.props.profile._id);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loadingProfile = _this$props.loadingProfile,\n          auth = _this$props.auth,\n          user = _this$props.user,\n          profile = _this$props.profile;\n    let followBtn;\n\n    if (auth.isAuthenticated) {\n      if (user.following.indexOf(this.props.profile._id) === -1) {\n        followBtn = React.createElement(\"span\", {\n          className: classes.btnBlock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outlined\",\n          type: \"\",\n          className: classes.btnFollow,\n          onClick: this.handleFollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Follow\"));\n      } else {\n        followBtn = React.createElement(\"span\", {\n          className: classes.btnBlock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outlined\",\n          type: \"\",\n          className: classes.btnFollow,\n          onClick: this.handleUnfollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Unfollow\"));\n      }\n    } else {\n      followBtn = React.createElement(\"span\", {\n        className: classes.btnBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outlined\",\n        type: \"\",\n        className: classes.btnFollow,\n        href: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Login\"));\n    }\n\n    let profileInfo;\n\n    if (profile) {\n      console.log(this.props);\n\n      if (this.props.currentUserId !== this.props.targetUser) {\n        profileInfo = React.createElement(Paper, {\n          className: classes.paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(Link, {\n          href: ``,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: classes.display,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, profile.login, followBtn)), React.createElement(\"div\", {\n          className: classes.handle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"@\", profile.handle));\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, loadingProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Loading...\") : profileInfo);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  list: state.post.list,\n  //profile: '',\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getPostsByUserId,\n  getUserProfile,\n  followUser,\n  unfollowUser,\n  refreshUserProfile\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Profile/SearchProfile.js"],"names":["React","Component","withStyles","connect","getPostsByUserId","getUserProfile","followUser","unfollowUser","refreshUserProfile","Paper","Button","Link","styles","handle","color","display","textDecoration","following","followers","marginTop","marginBottom","paper","padding","detail","marginRight","btnBlock","float","btnFollow","backgroundColor","borderColor","Profile","constructor","props","handleFollow","bind","handleUnfollow","componentDidMount","targetUser","componentWillMount","componentDidUpdate","oldProps","auth","isAuthenticated","user","map","id","i","profile","_id","render","classes","loadingProfile","followBtn","indexOf","profileInfo","console","log","currentUserId","login","mapStateToProps","state","list","post","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst styles = {\r\n  handle: {\r\n    color: '#888',\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n    }\r\n  },\r\n  following: {\r\n\r\n  },\r\n  followers: {\r\n\r\n  },\r\n  display: {\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    color: \"#333\",\r\n    '&:hover': {\r\n      textDecoration: 'underline #333'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: 8,\r\n    marginBottom: 10\r\n  },\r\n  detail: {\r\n    marginRight: 5\r\n  },\r\n  btnBlock: {\r\n    float: 'right',\r\n  },\r\n  btnFollow: {\r\n    backgroundColor: 'inherit',\r\n    color: '#78dd60',\r\n    '&:hover': {\r\n      color: '#fff',\r\n      borderColor: '#78dd60',\r\n      backgroundColor: '#78dd60'\r\n    }\r\n  }\r\n}\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleFollow = this.handleFollow.bind(this)\r\n    this.handleUnfollow = this.handleUnfollow.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    getUserProfile(this.props.targetUser)\r\n    getPostsByUserId(this.props.targetUser)\r\n  }\r\n\r\n  componentWillMount() {\r\n    getUserProfile(this.props.targetUser)\r\n    getPostsByUserId(this.props.targetUser)\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if(this.props.auth.isAuthenticated) {\r\n      if(oldProps.user && oldProps.user.following !== this.props.user.following) {\r\n        this.props.user.following.map((id, i) => {\r\n          this.props.getUserProfile(id)\r\n        })\r\n      }\r\n    } \r\n  }\r\n\r\n  handleFollow () {\r\n    this.props.followUser(this.props.profile._id)\r\n  }\r\n\r\n  handleUnfollow () {\r\n    this.props.unfollowUser(this.props.profile._id)\r\n  }\r\n\r\n\r\n  render() {\r\n    const { classes, loadingProfile, auth, user, profile } = this.props\r\n    \r\n    let followBtn\r\n    if(auth.isAuthenticated) {\r\n      if(user.following.indexOf(this.props.profile._id) === -1) {\r\n        followBtn = (\r\n          <span className = { classes.btnBlock }>\r\n            <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow } onClick = { this.handleFollow }>\r\n              Follow\r\n            </Button>\r\n          </span>\r\n        )\r\n      } else {\r\n        followBtn = (\r\n          <span className = { classes.btnBlock }>\r\n            <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow }  onClick = { this.handleUnfollow }>\r\n              Unfollow\r\n            </Button>\r\n          </span>\r\n        )\r\n      }\r\n    } else {\r\n      followBtn = (\r\n        <span className = { classes.btnBlock }>\r\n          <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow }  href=\"/login\">\r\n            Login\r\n          </Button>\r\n        </span>\r\n      )\r\n    }\r\n    \r\n    let profileInfo;\r\n    if(profile) {\r\n      console.log(this.props)\r\n      if(this.props.currentUserId !== this.props.targetUser) {\r\n        profileInfo = (\r\n          <Paper className = { classes.paper }>\r\n            <Link href = { `` }>\r\n              <h1 className = { classes.display }>\r\n                { profile.login }\r\n                { followBtn }  \r\n              </h1> \r\n            </Link>\r\n            <div className = { classes.handle }>@{ profile.handle }</div> \r\n            \r\n          </Paper>\r\n        )\r\n      } \r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { loadingProfile ? <div>Loading...</div> : profileInfo }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  list: state.post.list,\r\n  //profile: '',\r\n  loadingProfile: state.profile.loading,\r\n  auth: state.auth,\r\n  user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile })(withStyles(styles)(Profile))"]},"metadata":{},"sourceType":"module"}