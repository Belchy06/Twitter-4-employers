{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { getPostsByUserId, getUserProfile } from '../../actions/profileActions';\nimport Post from '../Posts/Post';\nimport LoadingPosts from '../Posts/LoadingPosts';\nimport Paper from '@material-ui/core/Paper';\nconst styles = {\n  handle: {\n    color: '#736d6d',\n    paddingLeft: 5,\n    display: 'inline-block',\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  following: {\n    paddingLeft: 5\n  },\n  followers: {},\n  display: {\n    marginTop: 5,\n    marginBottom: 5\n  }\n};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getPostsByUserId(this.props.match.params.userId);\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loadingPosts = _this$props.loadingPosts,\n          loadingProfile = _this$props.loadingProfile,\n          list = _this$props.list,\n          auth = _this$props.auth,\n          user = _this$props.user,\n          profile = _this$props.profile;\n    console.log(profile);\n    let items;\n    items = list && list.map(el => React.createElement(Post, {\n      key: el._id,\n      post: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n    let profileInfo;\n\n    if (profile && items) {\n      profileInfo = React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, profile.login), React.createElement(\"div\", {\n        className: classes.handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"@\", profile.handle), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, items.length, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" posts\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.followers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, profile.followers.length + ' ', \"followers\"), React.createElement(\"span\", {\n        className: classes.following,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, profile.following.length + ' ', \"following\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, loadingProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Loading...\") : profileInfo, loadingPosts ? React.createElement(LoadingPosts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : items);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loadingPosts: state.post.loading,\n  list: state.post.list,\n  profile: state.profile.user,\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getPostsByUserId,\n  getUserProfile\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Profile/Profile.js"],"names":["React","Component","withStyles","connect","getPostsByUserId","getUserProfile","Post","LoadingPosts","Paper","styles","handle","color","paddingLeft","display","textDecoration","following","followers","marginTop","marginBottom","Profile","constructor","props","componentDidMount","match","params","userId","render","classes","loadingPosts","loadingProfile","list","auth","user","profile","console","log","items","map","el","_id","profileInfo","paper","login","length","mapStateToProps","state","post","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { getPostsByUserId, getUserProfile } from '../../actions/profileActions'\r\nimport Post from '../Posts/Post'\r\nimport LoadingPosts from '../Posts/LoadingPosts'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\nconst styles = {\r\n  handle: {\r\n    color: '#736d6d',\r\n    paddingLeft: 5,\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      textDecoration: 'none'\r\n    }\r\n  },\r\n  following: {\r\n    paddingLeft: 5\r\n  },\r\n  followers: {\r\n\r\n  },\r\n  display: {\r\n   marginTop: 5,\r\n   marginBottom: 5\r\n  }\r\n}\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  componentDidMount() {\r\n    this.props.getPostsByUserId(this.props.match.params.userId)\r\n    this.props.getUserProfile(this.props.match.params.userId)\r\n  }\r\n\r\n  render() {\r\n    const { classes, loadingPosts, loadingProfile, list, auth, user, profile } = this.props\r\n    console.log(profile)\r\n    let items;\r\n    items = list && list.map(el => <Post key={ el._id } post={ el }/>)\r\n    let profileInfo;\r\n    if(profile && items) {\r\n      profileInfo = (\r\n        <Paper className = { classes.paper }>\r\n          <h1 className = { classes.display }>{ profile.login }</h1>\r\n          <div className = { classes.handle }>@{ profile.handle }</div>\r\n          <div>\r\n            <div>\r\n              { items.length }\r\n              <span> posts</span>\r\n            </div>\r\n            <div>\r\n              <span className = { classes.followers }>\r\n                { profile.followers.length + ' ' }\r\n                followers\r\n              </span>\r\n              <span className = { classes.following }>\r\n                { profile.following.length + ' ' }\r\n                following\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { loadingProfile ? <div>Loading...</div> : profileInfo }\r\n        { loadingPosts ? <LoadingPosts/> : items}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loadingPosts: state.post.loading,\r\n  list: state.post.list,\r\n  profile: state.profile.user,\r\n  loadingProfile: state.profile.loading,\r\n  auth: state.auth,\r\n  user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPostsByUserId, getUserProfile })(withStyles(styles)(Profile))"]},"metadata":{},"sourceType":"module"}