{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Posts\\\\ListPost.js\";\nimport React, { Component } from 'react';\nimport AddPost from './AddPost';\nimport Post from './Post';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/postActions';\nimport LoadingPosts from './LoadingPosts';\n\nclass ListPost extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.getPosts();\n  }\n\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          loading = _this$props.loading;\n    console.log(list);\n    const items = list && list.map(el => React.createElement(Post, {\n      key: el._id,\n      post: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), loading ? React.createElement(LoadingPosts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }) : items, React.createElement(Post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  list: state.post.list,\n  loading: state.post.loading\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(ListPost);","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Posts/ListPost.js"],"names":["React","Component","AddPost","Post","connect","getPosts","LoadingPosts","ListPost","constructor","props","componentDidMount","render","list","loading","console","log","items","map","el","_id","mapStateToProps","state","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWJ,QAAX;AACD;;AACDM,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAKF,KADxB;AAAA,UACCG,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,KAAK,GAAGJ,IAAI,IAAIA,IAAI,CAACK,GAAL,CAASC,EAAE,IAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,EAAE,CAACC,GAAd;AAAmB,MAAA,IAAI,EAAED,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf,CAAtB;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEIL,OAAO,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAqBG,KAFhC,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOD;;AAlB8B;;AAsBjC,MAAMI,eAAe,GAAIC,KAAD,KAAY;AACnCT,EAAAA,IAAI,EAAES,KAAK,CAACC,IAAN,CAAWV,IADkB;AAEnCC,EAAAA,OAAO,EAAEQ,KAAK,CAACC,IAAN,CAAWT;AAFe,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,QAAvC,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport AddPost from './AddPost'\r\nimport Post from './Post'\r\nimport { connect } from 'react-redux'\r\nimport { getPosts } from '../../actions/postActions'\r\nimport LoadingPosts from './LoadingPosts'\r\n\r\nclass ListPost extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  componentDidMount() {\r\n    this.props.getPosts()\r\n  }\r\n  render() {\r\n    const { list, loading } = this.props\r\n    console.log(list)\r\n    const items = list && list.map(el => <Post key={el._id} post={el} />)\r\n    return (\r\n      <div>\r\n        <AddPost/>\r\n        { loading ? <LoadingPosts/> : items }\r\n        <Post/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tlist: state.post.list,\r\n\tloading: state.post.loading\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPosts })(ListPost)"]},"metadata":{},"sourceType":"module"}