{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Search\\\\SearchProfiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { searchUsers } from '../../actions/searchActions';\nimport Profile from '../Profile/SearchProfile';\nimport Loading from '../Posts/LoadingPosts';\n\nclass Profiles extends Component {\n  componentDidMount() {\n    this.props.searchUsers(this.props.query);\n  }\n\n  componentDidUpdate(oldProps) {\n    console.log(oldProps.query + ' / ' + this.props.query);\n\n    if (oldProps.query != this.props.query) {\n      this.props.searchUsers(this.props.query);\n    }\n  }\n\n  render() {\n    let list = this.props.profiles;\n    var filtered = list.filter(function (item) {\n      return item !== null && item !== '';\n    });\n    const items = filtered.map(info => React.createElement(Profile, {\n      key: info._id,\n      profile: info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, items);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth,\n  profiles: state.search.profiles,\n  searching: state.search.searching\n});\n\nexport default connect(mapStateToProps, {\n  searchUsers\n})(Profiles);","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Search/SearchProfiles.js"],"names":["React","Component","connect","searchUsers","Profile","Loading","Profiles","componentDidMount","props","query","componentDidUpdate","oldProps","console","log","render","list","profiles","filtered","filter","item","items","map","info","_id","mapStateToProps","state","user","auth","search","searching"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAlC;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACF,KAAT,GAAiB,KAAjB,GAAyB,KAAKD,KAAL,CAAWC,KAAhD;;AACA,QAAGE,QAAQ,CAACF,KAAT,IAAkB,KAAKD,KAAL,CAAWC,KAAhC,EAAuC;AACrC,WAAKD,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAlC;AACD;AACF;;AAEDK,EAAAA,MAAM,GAAI;AACR,QAAIC,IAAI,GAAG,KAAKP,KAAL,CAAWQ,QAAtB;AACA,QAAIC,QAAQ,GAAGF,IAAI,CAACG,MAAL,CAAY,UAASC,IAAT,EAAe;AACxC,aAAQA,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,EAAlC;AACD,KAFc,CAAf;AAGA,UAAMC,KAAK,GAAGH,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAAI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAKA,IAAI,CAACC,GAAtB;AAA4B,MAAA,OAAO,EAAKD,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB,CAAd;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,KAAP,CADF;AAGD;;AArB8B;;AAwBjC,MAAMI,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWD,IADe;AAEhCC,EAAAA,IAAI,EAAEF,KAAK,CAACE,IAFoB;AAGhCX,EAAAA,QAAQ,EAAES,KAAK,CAACG,MAAN,CAAaZ,QAHS;AAIhCa,EAAAA,SAAS,EAAEJ,KAAK,CAACG,MAAN,CAAaC;AAJQ,CAAZ,CAAxB;;AAQA,eAAe3B,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA0CG,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { searchUsers } from '../../actions/searchActions'\r\nimport Profile from '../Profile/SearchProfile'\r\nimport Loading from '../Posts/LoadingPosts'\r\n\r\nclass Profiles extends Component {\r\n  componentDidMount() {\r\n    this.props.searchUsers(this.props.query)\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    console.log(oldProps.query + ' / ' + this.props.query)\r\n    if(oldProps.query != this.props.query) {\r\n      this.props.searchUsers(this.props.query)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let list = this.props.profiles\r\n    var filtered = list.filter(function(item) {\r\n      return (item !== null && item !== '')\r\n    })\r\n    const items = filtered.map(info => <Profile key = { info._id } profile = { info } />)\r\n    return (\r\n      <div>{ items }</div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.user,\r\n    auth: state.auth,\r\n    profiles: state.search.profiles,\r\n    searching: state.search.searching\r\n  }\r\n)\r\n\r\nexport default connect(mapStateToProps, { searchUsers })(Profiles)"]},"metadata":{},"sourceType":"module"}