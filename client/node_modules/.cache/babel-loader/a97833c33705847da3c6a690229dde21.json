{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\src\\\\components\\\\Profile\\\\Profile.js\";\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions';\nimport Post from '../Posts/Post';\nimport LoadingPosts from '../Posts/LoadingPosts';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nconst styles = {\n  handle: {\n    color: '#888',\n    display: 'inline-block',\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  },\n  following: {},\n  followers: {},\n  display: {\n    marginTop: 5,\n    marginBottom: 5\n  },\n  paper: {\n    padding: 8\n  },\n  detailBlock: {\n    display: 'flex'\n  },\n  detail: {\n    marginRight: 5\n  },\n  btnBlock: {\n    float: 'right'\n  },\n  btnFollow: {\n    backgroundColor: 'inherit',\n    color: '#78dd60',\n    '&:hover': {\n      color: '#fff',\n      borderColor: '#78dd60',\n      backgroundColor: '#78dd60'\n    }\n  }\n};\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.handleFollow = this.handleFollow.bind(this);\n    this.handleUnfollow = this.handleUnfollow.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getPostsByUserId(this.props.match.params.userId);\n    this.props.getUserProfile(this.props.match.params.userId);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props.auth.isAuthenticated) {\n      if (oldProps.user && oldProps.user.following !== this.props.user.following) {\n        this.props.refreshUserProfile(this.props.match.params.userId);\n      }\n    }\n  }\n\n  handleFollow() {\n    this.props.followUser(this.props.match.params.userId);\n  }\n\n  handleUnfollow() {\n    this.props.unfollowUser(this.props.match.params.userId);\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          loadingPosts = _this$props.loadingPosts,\n          loadingProfile = _this$props.loadingProfile,\n          list = _this$props.list,\n          auth = _this$props.auth,\n          user = _this$props.user,\n          profile = _this$props.profile;\n    let followBtn;\n    console.log(user);\n\n    if (auth.isAuthenticated) {\n      if (user.following.indexOf(this.props.match.params.userId) == -1) {} else {\n        followBtn = React.createElement(\"span\", {\n          className: classes.btnBlock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"outlined\",\n          type: \"\",\n          className: classes.btnFollow,\n          onClick: this.handleUnfollow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Unfollow\"));\n      }\n    }\n\n    let items;\n    items = list && list.map(el => React.createElement(Post, {\n      key: el._id,\n      post: el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n    let profileInfo;\n\n    if (profile && items) {\n      profileInfo = React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: classes.display,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, profile.login, followBtn), React.createElement(\"div\", {\n        className: classes.handle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"@\", profile.handle), React.createElement(\"div\", {\n        className: classes.detailBlock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, items.length, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \" posts\")), React.createElement(\"div\", {\n        className: classes.detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.followers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, profile.followers.length + ' ', \"followers\")), React.createElement(\"div\", {\n        className: classes.detail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.following,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, profile.following.length + ' ', \"following\"))));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, loadingProfile ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Loading...\") : profileInfo, loadingPosts ? React.createElement(LoadingPosts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : items);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  loadingPosts: state.post.loading,\n  list: state.post.list,\n  profile: state.profile.user,\n  loadingProfile: state.profile.loading,\n  auth: state.auth,\n  user: state.auth.user\n});\n\nexport default connect(mapStateToProps, {\n  getPostsByUserId,\n  getUserProfile,\n  followUser,\n  unfollowUser,\n  refreshUserProfile\n})(withStyles(styles)(Profile));","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/components/Profile/Profile.js"],"names":["React","Component","withStyles","connect","getPostsByUserId","getUserProfile","followUser","unfollowUser","refreshUserProfile","Post","LoadingPosts","Paper","Button","styles","handle","color","display","textDecoration","following","followers","marginTop","marginBottom","paper","padding","detailBlock","detail","marginRight","btnBlock","float","btnFollow","backgroundColor","borderColor","Profile","constructor","props","handleFollow","bind","handleUnfollow","componentDidMount","match","params","userId","componentDidUpdate","oldProps","auth","isAuthenticated","user","render","classes","loadingPosts","loadingProfile","list","profile","followBtn","console","log","indexOf","items","map","el","_id","profileInfo","login","length","mapStateToProps","state","post","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { connect } from 'react-redux'\r\nimport { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile } from '../../actions/profileActions'\r\nimport Post from '../Posts/Post'\r\nimport LoadingPosts from '../Posts/LoadingPosts'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst styles = {\r\n  handle: {\r\n    color: '#888',\r\n    display: 'inline-block',\r\n    '&:hover': {\r\n      textDecoration: 'none'\r\n    }\r\n  },\r\n  following: {\r\n\r\n  },\r\n  followers: {\r\n\r\n  },\r\n  display: {\r\n   marginTop: 5,\r\n   marginBottom: 5\r\n  },\r\n  paper: {\r\n    padding: 8\r\n  },\r\n  detailBlock: {\r\n    display: 'flex'\r\n  },\r\n  detail: {\r\n    marginRight: 5\r\n  },\r\n  btnBlock: {\r\n    float: 'right',\r\n  },\r\n  btnFollow: {\r\n    backgroundColor: 'inherit',\r\n    color: '#78dd60',\r\n    '&:hover': {\r\n      color: '#fff',\r\n      borderColor: '#78dd60',\r\n      backgroundColor: '#78dd60'\r\n    }\r\n  }\r\n}\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleFollow = this.handleFollow.bind(this)\r\n    this.handleUnfollow = this.handleUnfollow.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getPostsByUserId(this.props.match.params.userId)\r\n    this.props.getUserProfile(this.props.match.params.userId)\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if(this.props.auth.isAuthenticated) {\r\n      if(oldProps.user && oldProps.user.following !== this.props.user.following) {\r\n        this.props.refreshUserProfile(this.props.match.params.userId)\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  handleFollow () {\r\n    this.props.followUser(this.props.match.params.userId)\r\n  }\r\n\r\n  handleUnfollow () {\r\n    this.props.unfollowUser(this.props.match.params.userId)\r\n  }\r\n\r\n  render() {\r\n    const { classes, loadingPosts, loadingProfile, list, auth, user, profile } = this.props\r\n    let followBtn\r\n    console.log(user)\r\n    if(auth.isAuthenticated) {\r\n      if(user.following.indexOf(this.props.match.params.userId) == -1) {\r\n\r\n      } else {\r\n        followBtn = (\r\n          <span className = { classes.btnBlock }>\r\n            <Button variant=\"outlined\" type=\"\" className = { classes.btnFollow }  onClick = { this.handleUnfollow }>\r\n              Unfollow\r\n            </Button>\r\n          </span>\r\n        )\r\n      }\r\n    }\r\n    \r\n    let items;\r\n    items = list && list.map(el => <Post key={ el._id } post={ el }/>)\r\n    let profileInfo;\r\n    if(profile && items) {\r\n      profileInfo = (\r\n        <Paper className = { classes.paper }>\r\n          <h1 className = { classes.display }>\r\n            { profile.login }\r\n            { followBtn }\r\n          </h1>\r\n          <div className = { classes.handle }>@{ profile.handle }</div>\r\n          <div className = { classes.detailBlock }>\r\n            <div  className = { classes.detail }>\r\n              { items.length }\r\n              <span> posts</span>\r\n            </div>\r\n            <div  className = { classes.detail }>\r\n              <span className = { classes.followers }>\r\n                { profile.followers.length + ' ' }\r\n                followers\r\n              </span>\r\n            </div>\r\n            <div  className = { classes.detail }>\r\n              <span className = { classes.following }>\r\n                { profile.following.length + ' ' }\r\n                following\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </Paper>\r\n\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        { loadingProfile ? <div>Loading...</div> : profileInfo }\r\n        { loadingPosts ? <LoadingPosts/> : items}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loadingPosts: state.post.loading,\r\n  list: state.post.list,\r\n  profile: state.profile.user,\r\n  loadingProfile: state.profile.loading,\r\n  auth: state.auth,\r\n  user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPostsByUserId, getUserProfile, followUser, unfollowUser, refreshUserProfile })(withStyles(styles)(Profile))"]},"metadata":{},"sourceType":"module"}