{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Will\\\\Desktop\\\\Twitter-4-employers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { ADD_POST, LOADING_POSTS, GET_POSTS, LIKE_POST, UNLIKE_POST } from '../constants';\nimport update from 'react-addons-update';\nconst initialState = {\n  list: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        list: [action.payload, ...state.list]\n      });\n\n    case LOADING_POSTS:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        loading: false,\n        list: action.payload\n      });\n\n    case LIKE_POST:\n      let index = state.list.findIndex(o => o._id === action.payload.postId);\n      console.log(action.payload);\n      return update(state, {\n        list: {\n          [index]: {\n            likes: {\n              $set: [action.payload.userId, ...state.list[index].likes]\n            }\n          }\n        }\n      });\n\n    case UNLIKE_POST:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/reducers/postReducer.js"],"names":["ADD_POST","LOADING_POSTS","GET_POSTS","LIKE_POST","UNLIKE_POST","update","initialState","list","loading","state","action","type","payload","index","findIndex","o","_id","postId","console","log","likes","$set","userId"],"mappings":";AAAA,SACEA,QADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,WALF,QAMO,cANP;AAOA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,UAAWC,KAAK,GAAGH,YAAnB,EAAiCI,MAAjC,EAA0C;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,QAAL;AACE,+BACKS,KADL;AAEEF,QAAAA,IAAI,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,IAA1B;AAFR;;AAIF,SAAKN,aAAL;AACE,+BACKQ,KADL;AAEED,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKN,SAAL;AACE,+BACKO,KADL;AAEED,QAAAA,OAAO,EAAE,KAFX;AAGED,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAHf;;AAKF,SAAKT,SAAL;AACE,UAAIU,KAAK,GAAGJ,KAAK,CAACF,IAAN,CAAWO,SAAX,CAAqBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUN,MAAM,CAACE,OAAP,CAAeK,MAAnD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACE,OAAnB;AACA,aAAOP,MAAM,CAACI,KAAD,EAAQ;AACnBF,QAAAA,IAAI,EAAE;AACJ,WAACM,KAAD,GAAS;AACPO,YAAAA,KAAK,EAAE;AAACC,cAAAA,IAAI,EAAE,CAACX,MAAM,CAACE,OAAP,CAAeU,MAAhB,EAAwB,GAAGb,KAAK,CAACF,IAAN,CAAWM,KAAX,EAAkBO,KAA7C;AAAP;AADA;AADL;AADa,OAAR,CAAb;;AAOF,SAAKhB,WAAL;AACE,+BACKK,KADL;;AAGF;AACE,aAAOA,KAAP;AAhCJ;AAkCD","sourcesContent":["import { \r\n  ADD_POST,\r\n  LOADING_POSTS,\r\n  GET_POSTS,\r\n  LIKE_POST,\r\n  UNLIKE_POST\r\n} from '../constants'\r\nimport update from 'react-addons-update';\r\n\r\nconst initialState = {\r\n  list: [],\r\n  loading: false,\r\n}\r\n\r\nexport default function ( state = initialState, action ) {\r\n  switch(action.type) {\r\n    case ADD_POST:\r\n      return {\r\n        ...state,\r\n        list: [action.payload, ...state.list]\r\n      }\r\n    case LOADING_POSTS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        list: action.payload\r\n      }\r\n    case LIKE_POST:\r\n      let index = state.list.findIndex(o => o._id === action.payload.postId)\r\n      console.log(action.payload)\r\n      return update(state, {\r\n        list: {\r\n          [index]: {\r\n            likes: {$set: [action.payload.userId, ...state.list[index].likes]}\r\n          }\r\n        }\r\n      })\r\n    case UNLIKE_POST:\r\n      return {\r\n        ...state\r\n      }\r\n    default: \r\n      return state\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}