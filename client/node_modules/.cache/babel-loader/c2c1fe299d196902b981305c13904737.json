{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER, SERVER_URL } from '../constants';\nimport setAuthHeader from '../utils/setAuthHeader';\nexport const loginUser = userData => dispatch => {\n  axios.post(SERVER_URL + 'api/users/login', userData).then(res => {\n    const token = res.data.token;\n    localStorage.setItem('jwtToken', token);\n    setAuthHeader(token);\n    dispatch(getCurrentUser());\n  }).catch(err => {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  });\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(SERVER_URL + 'api/users/register', userData).then(res => history.push('/login')).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const getCurrentUser = () => dispatch => {\n  axios.get(SERVER_URL + 'api/users').then(res => dispatch(setCurrentUser(res.data)));\n};\nexport const setCurrentUser = data => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: data\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('jwtToken');\n  setAuthHeader();\n  dispatch(setCurrentUser());\n};","map":{"version":3,"sources":["C:/Users/Will/Desktop/Twitter-4-employers/client/src/actions/authActions.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","SERVER_URL","setAuthHeader","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","getCurrentUser","catch","err","type","payload","response","registerUser","history","push","get","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,UAAvC,QAAyD,cAAzD;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAIC,QAAD,IAAcC,QAAQ,IAAI;AACjDP,EAAAA,KAAK,CAACQ,IAAN,CAAWL,UAAU,GAAG,iBAAxB,EAA4CG,QAA5C,EACGG,IADH,CACQC,GAAG,IAAI;AAAA,UACHC,KADG,GACOD,GAAG,CAACE,IADX,CACHD,KADG;AAEXE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,KAAjC;AACAP,IAAAA,aAAa,CAACO,KAAD,CAAb;AACAJ,IAAAA,QAAQ,CAACQ,cAAc,EAAf,CAAR;AACD,GANH,EAOGC,KAPH,CAOSC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AACPW,MAAAA,IAAI,EAAEjB,UADC;AAEPkB,MAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFf,KAAD,CAAR;AAID,GAZH;AAaD,CAdM;AAgBP,OAAO,MAAMS,YAAY,GAAG,CAACf,QAAD,EAAWgB,OAAX,KAAuBf,QAAQ,IAAI;AAC7DP,EAAAA,KAAK,CAACQ,IAAN,CAAWL,UAAU,GAAG,oBAAxB,EAA8CG,QAA9C,EACGG,IADH,CACQC,GAAG,IAAIY,OAAO,CAACC,IAAR,CAAa,QAAb,CADf,EAEGP,KAFH,CAESC,GAAG,IAAIV,QAAQ,CAAC;AACrBW,IAAAA,IAAI,EAAEjB,UADe;AAErBkB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaR;AAFD,GAAD,CAFxB;AAMD,CAPM;AASP,OAAO,MAAMG,cAAc,GAAG,MAAMR,QAAQ,IAAI;AAC9CP,EAAAA,KAAK,CAACwB,GAAN,CAAUrB,UAAU,GAAG,WAAvB,EACGM,IADH,CACQC,GAAG,IAAIH,QAAQ,CAACkB,cAAc,CAACf,GAAG,CAACE,IAAL,CAAf,CADvB;AAED,CAHM;AAKP,OAAO,MAAMa,cAAc,GAAIb,IAAD,IAAU;AACtC,SAAO;AACLM,IAAAA,IAAI,EAAEhB,gBADD;AAELiB,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMc,UAAU,GAAG,MAAMnB,QAAQ,IAAI;AAC1CM,EAAAA,YAAY,CAACc,UAAb,CAAwB,UAAxB;AACAvB,EAAAA,aAAa;AACbG,EAAAA,QAAQ,CAACkB,cAAc,EAAf,CAAR;AACD,CAJM","sourcesContent":["import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER, SERVER_URL } from '../constants'\r\nimport setAuthHeader from '../utils/setAuthHeader'\r\n\r\nexport const loginUser = (userData) => dispatch => {\r\n  axios.post(SERVER_URL + 'api/users/login' , userData)\r\n    .then(res => {\r\n      const { token } = res.data\r\n      localStorage.setItem('jwtToken', token)\r\n      setAuthHeader(token)\r\n      dispatch(getCurrentUser())\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    })\r\n}\r\n\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios.post(SERVER_URL + 'api/users/register', userData)\r\n    .then(res => history.push('/login'))\r\n    .catch(err => dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    }))\r\n}\r\n\r\nexport const getCurrentUser = () => dispatch => {\r\n  axios.get(SERVER_URL + 'api/users')\r\n    .then(res => dispatch(setCurrentUser(res.data)))\r\n}\r\n\r\nexport const setCurrentUser = (data) => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  localStorage.removeItem('jwtToken')\r\n  setAuthHeader()\r\n  dispatch(setCurrentUser())\r\n}"]},"metadata":{},"sourceType":"module"}